class Solution {
public:
    pair<bool, int > dfs(TreeNode* root){
        if (root == nullptr) return make_pair(true, 0);

        pair<bool, int> left = dfs(root->left);
        pair<bool, int> right = dfs(root->right);

        bool res = left.first && right.first && abs(left.second - right.second) <= 1;

        return make_pair(res, 1 + max(left.second, right.second));
    }
    
    bool isBalanced(TreeNode* root) {
        return dfs(root).first;
    }

    
};
